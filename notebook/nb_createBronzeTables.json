{
	"name": "nb_createBronzeTables",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpoolmed",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": true,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "3ad2f74b-585a-43dd-87ef-218dddd479fe"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/1a8f2456-71f5-4894-9064-fbbd6756370d/resourceGroups/rg_lace/providers/Microsoft.Synapse/workspaces/synlacedccc/bigDataPools/sparkpoolmed",
				"name": "sparkpoolmed",
				"type": "Spark",
				"endpoint": "https://synlacedccc.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpoolmed",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 32,
				"memory": 224,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import json\r\n",
					"\r\n",
					"CredentialProperties = mssparkutils.credentials.getPropertiesAll(\"WorkspaceSystemIdentity\")\r\n",
					"CredentialProperties = json.loads(CredentialProperties)\r\n",
					"storageLocation = CredentialProperties['Endpoint'].replace('https://', '')\r\n",
					"storageContainer = 'adlsfslacedccc'\r\n",
					"\r\n",
					"print(f\"{storageLocation} and {storageContainer}\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"sqlQuery = f\"CREATE DATEBASE IF NOT EXISTS Bronze LOCATION 'abfss://adlsfslacedccc"
				],
				"execution_count": null
			}
		]
	}
}